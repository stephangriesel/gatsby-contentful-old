{"version":3,"sources":["webpack:///./src/components/Navbar.js","webpack:///./src/components/Layout.js","webpack:///./src/components/product.js","webpack:///./src/components/products.js","webpack:///./src/components/Tours/BookTour.js","webpack:///./src/pages/book.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Navbar","className","styles","logo","menuWrapper","menu","to","Layout","children","console","log","Product","skus","product","image","useState","stripe","setStripe","useEffect","undefined","window","Stripe","process","node","id","sku","setSku","class","booking","productName","name","value","onChange","e","target","map","edge","key","attributes","btn","onClick","redirectToCheckout","items","quantity","successUrl","cancelUrl","Products","query","render","allStripeSku","allStripeProduct","edges","filter","images","length","BookTour","Book","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","data","finalData","Fragment","StaticQuery","props","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"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","file":"component---src-pages-book-js-1486b907f75b22643074.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport styles from '../css/navbar.module.css'\n\nconst Navbar = () => {\n    return (\n        <header>\n            <div className={styles.logo}>\n                test\n            </div>\n            <div className={styles.menuWrapper}>\n                <nav>\n                    <ul className={styles.menu}>\n                        <Link to=\"/\"><li>Home</li></Link>\n                        {/* <li><Link to=\"/blog/\">Blog</Link></li> */}\n                        {/* <li><Link to=\"/products/\">Products</Link></li> */}\n                        {/* <li><Link to=\"/examples/\">Examples</Link></li> */}\n                        {/* <li><Link to=\"/images/\">Images</Link></li> */}\n                        <Link to=\"/tours/\"><li>Tours</li></Link>\n                        <Link to=\"/contact/\"><li>Contact</li></Link>\n                    </ul>\n                </nav>\n            </div>\n        </header>\n    )\n}\n\nexport default Navbar","import React from 'react'\nimport Navbar from './Navbar'\nimport '../css/layout.css'\n// import '../sass/layout.scss'\n\nconst Layout = ({ children }) => {\n    console.log(children);\n    return (\n        <div className=\"wrapper\">\n            <Navbar />\n            <main>\n                {children}\n            </main>\n        </div>\n    )\n}\n\nexport default Layout;\n","import React, { useState, useEffect } from \"react\";\nimport styles from '../css/booking.module.css';\n\nconst Product = ({ skus, product, image }) => {\n    // Troubleshooting documention for build\n    // https://www.gatsbyjs.org/docs/debugging-html-builds/\n    // https://www.gatsbyjs.org/docs/processing-payments-with-stripe/\n    const [stripe, setStripe] = useState(null)\n    useEffect(() => {\n        if (typeof window !== undefined && typeof window.Stripe !== undefined) {\n            setStripe(window.Stripe(`${process.env.GATSBY_STRIPE_PK}`))\n        }\n    }, [])\n    // const stripe = window.Stripe(`${process.env.STRIPE_PK}`) // < old version \n\n    const [sku, setSku] = useState(skus[0].node.id);\n\n    const placeOrder = () => {\n        stripe.redirectToCheckout({\n            items: [\n                {\n                    sku: sku,\n                    quantity: 1\n                }\n            ],\n            successUrl: \"https://stephantours.netlify.com/success/\",\n            cancelUrl: \"https://stephantours.netlify.com/cancel/\"\n        })\n    }\n    return (\n        <article class={styles.booking}>\n            {/* <img src={image} alt=\"Shirt\" /> */}\n            <h3 class={styles.productName}>{product.name}</h3>\n            <select value={sku} onChange={(e) => setSku(e.target.value)}>\n                {skus.map(edge =>\n                    <option\n                        key={edge.node.id} value={edge.node.id}>{edge.node.attributes.name}\n                    </option>\n                )}\n\n            </select>\n            <button class={styles.btn} onClick={placeOrder}>Book My Spot</button>\n        </article>\n    )\n}\n\nexport default Product\n","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby';\nimport Product from '../components/product';\n\nconst PRODUCTS_QUERY = graphql`\n    query AllProducts {\n            allStripeSku {\n              edges {\n                node {\n                  product {\n                    name\n                    id\n                  }\n                  id\n                  attributes {\n                    name\n                  }\n                  price\n                  image\n                }\n              }\n            } \n            allStripeProduct {\n              edges {\n                node {\n                  name\n                  id\n                }\n              }\n            }\n    }\n`;\n\nconst Products = () => {\n  return (<StaticQuery\n    query={PRODUCTS_QUERY}\n    render={\n      ({ allStripeSku, allStripeProduct }) => {\n\n        return allStripeProduct.edges.map(product => {\n          const skus = allStripeSku.edges.filter(\n            sku => sku.node.product.id === product.node.id\n          )\n          console.log(skus);\n          const images = skus.filter(\n            sku => sku.node.image\n          )\n          const image = images.length > 0 ? images[0].node.image : \"\";\n          console.log(image);\n          return (\n            <Product\n              key={product.node.id}\n              skus={skus}\n              product={product.node}\n              image={image}\n            />\n          )\n        })\n        // return\n      }\n    }\n  />)\n}\n\nexport default Products;\n","import React from 'react'\nimport Products from '../products';\n\nconst BookTour = () => {\n    return (\n        <div>\n            <Products />\n        </div>\n    )\n}\n\nexport default BookTour\n","import React from \"react\"\n// import { Link } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport BookTour from \"../components/Tours/BookTour\"\n\nconst Book = () => {\n    return (\n        <Layout>\n            <h1>Booking Page</h1>\n            <BookTour />\n        </Layout>\n    )\n}\n\nexport default Book\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}